"use strict";(self.webpackChunkgemunion_github_io=self.webpackChunkgemunion_github_io||[]).push([[4757],{8564:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>f});var i=n(4848),s=n(8453);const r={hide_table_of_contents:!0,sidebar_position:5},c="Interfaces",a={id:"interfaces/interfaces",title:"Interfaces",description:"This is a list of interfaces for reference from mechanics description",source:"@site/api/interfaces/interfaces.md",sourceDirName:"interfaces",slug:"/interfaces/",permalink:"/api/interfaces/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{hide_table_of_contents:!0,sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Exchange",permalink:"/api/contracts/exchange"},next:{title:"Common DB interfaces",permalink:"/api/interfaces/common-db"}},o={},f=[];function d(e){const t={h1:"h1",p:"p",...(0,s.RP)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"interfaces",children:"Interfaces"}),"\n",(0,i.jsx)(t.p,{children:"This is a list of interfaces for reference from mechanics description"})]})}function u(e={}){const{wrapper:t}={...(0,s.RP)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{RP:()=>r});var i=n(6540);const s=i.createContext({});function r(e){const t=i.useContext(s);return i.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);