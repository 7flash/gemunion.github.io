"use strict";(self.webpackChunkgemunion_github_io=self.webpackChunkgemunion_github_io||[]).push([[2762],{4371:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var t=i(4848),s=i(8453);const r={hide_table_of_contents:!0,sidebar_position:9},a="Breeding",c={id:"mechanics-gaming/breeding/breeding",title:"Breeding",description:"Breading is a mechanic used to produce new tokens with better parameters using existing tokens.",source:"@site/admin/mechanics-gaming/breeding/breeding.md",sourceDirName:"mechanics-gaming/breeding",slug:"/mechanics-gaming/breeding/",permalink:"/admin/mechanics-gaming/breeding/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{hide_table_of_contents:!0,sidebar_position:9},sidebar:"defaultSidebar",previous:{title:"Search",permalink:"/admin/mechanics-gaming/recipes/dismantle/search"},next:{title:"Rent",permalink:"/admin/mechanics-gaming/rent/"}},d={},o=[{value:"Genes",id:"genes",level:2}];function g(e){const n={a:"a",h1:"h1",h2:"h2",img:"img",p:"p",...(0,s.RP)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"breeding",children:"Breeding"}),"\n",(0,t.jsx)(n.p,{children:"Breading is a mechanic used to produce new tokens with better parameters using existing tokens."}),"\n",(0,t.jsxs)(n.p,{children:["Genes are displayed on ",(0,t.jsx)(n.a,{href:"/api/json/marketplaces/",children:"marketplaces"})]}),"\n",(0,t.jsx)(n.h2,{id:"genes",children:"Genes"}),"\n",(0,t.jsx)(n.p,{children:"We support 6 genes or better to call them DND attributes: strength, dexterity, constitution, intelligence, wisdom, charisma"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:i(7705).A+"",width:"2182",height:"1648"})})]})}function m(e={}){const{wrapper:n}={...(0,s.RP)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},7705:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/breeds-10637a53fbe0f893d0a688836652d34d.png"},8453:(e,n,i)=>{i.d(n,{RP:()=>r});var t=i(6540);const s=t.createContext({});function r(e){const n=t.useContext(s);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);