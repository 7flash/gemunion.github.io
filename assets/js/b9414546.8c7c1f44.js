"use strict";(self.webpackChunkgemunion_github_io=self.webpackChunkgemunion_github_io||[]).push([[8666],{2731:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>m});var i=n(4848),s=n(8453);const a={hide_table_of_contents:!0,sidebar_position:5},c="Achievements",o={id:"mechanics-meta/achievements/achievements",title:"Achievements",description:"Achievements is a first meta-mechanic that could be applied to almost any other mechanic or action in the system. For",source:"@site/admin/mechanics-meta/achievements/achievements.md",sourceDirName:"mechanics-meta/achievements",slug:"/mechanics-meta/achievements/",permalink:"/admin/mechanics-meta/achievements/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{hide_table_of_contents:!0,sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Promo",permalink:"/admin/mechanics-meta/promo/"},next:{title:"Rules",permalink:"/admin/mechanics-meta/achievements/rules/"}},r={},m=[];function h(e){const t={a:"a",blockquote:"blockquote",h1:"h1",p:"p",strong:"strong",...(0,s.RP)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"achievements",children:"Achievements"}),"\n",(0,i.jsxs)(t.p,{children:["Achievements is a first meta-mechanic that could be applied to almost any other mechanic or action in the system. For\nexample achievements could be applied to ",(0,i.jsx)(t.a,{href:"/admin/mechanics-marketing/recipes/craft/",children:"Craft"}),", the user who crafted an item 10\ntimes receives achievement - artisan. Each achievement can have multiple levels that gives different rewards."]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"NOTE!"})," In B2B system achievement could be applied across merchants i.e. to the whole system."]}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,s.RP)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{RP:()=>a});var i=n(6540);const s=i.createContext({});function a(e){const t=i.useContext(s);return i.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);