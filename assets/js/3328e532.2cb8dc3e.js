"use strict";(self.webpackChunkgemunion_github_io=self.webpackChunkgemunion_github_io||[]).push([[7018],{1464:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var a=n(4848),i=n(8453);const s={hide_table_of_contents:!0,sidebar_position:2},r="GAME microservice",o={id:"game/game",title:"GAME microservice",description:"GAME-MS is intended as a gateway between merchant's game server and the blockchain. It is not meant to be accessed from",source:"@site/api/game/game.md",sourceDirName:"game",slug:"/game/",permalink:"/api/game/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{hide_table_of_contents:!0,sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Marketplaces",permalink:"/api/json/marketplaces"},next:{title:"Marketing Mechanics",permalink:"/api/game/mechanics-marketing/"}},c={},d=[];function l(e){const t={a:"a",code:"code",h1:"h1",p:"p",...(0,i.RP)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"game-microservice",children:"GAME microservice"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"GAME-MS"})," is intended as a gateway between merchant's ",(0,a.jsx)(t.code,{children:"game server"})," and the blockchain. It is not meant to be accessed from\nUnity/Unreal app. To access it from Unity/Unreal app the developer has to proxy all calls through ",(0,a.jsx)(t.code,{children:"game server"})," and hide the API key."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"game server"})," can connect to the ",(0,a.jsx)(t.code,{children:"GAME-MS"})," using API key as a Bearer token in request header."]}),"\n",(0,a.jsxs)(t.p,{children:["Full list of endpoints available at ",(0,a.jsx)(t.a,{href:"https://game-api.gemunion.io/swagger",children:"swagger documentation"})]})]})}function m(e={}){const{wrapper:t}={...(0,i.RP)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{RP:()=>s});var a=n(6540);const i=a.createContext({});function s(e){const t=a.useContext(i);return a.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);