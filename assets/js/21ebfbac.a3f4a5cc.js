"use strict";(self.webpackChunkgemunion_github_io=self.webpackChunkgemunion_github_io||[]).push([[129],{8066:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>m});var i=t(4848),a=t(8453);const s={hide_table_of_contents:!0,sidebar_position:1},c="Claim interfaces",r={id:"interfaces/mechanics/claim",title:"Claim interfaces",description:"These interfaces related to claim mechanic",source:"@site/api/interfaces/mechanics/claim.md",sourceDirName:"interfaces/mechanics",slug:"/interfaces/mechanics/claim",permalink:"/api/interfaces/mechanics/claim",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{hide_table_of_contents:!0,sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Hierarchy interfaces",permalink:"/api/interfaces/hierarchy"},next:{title:"Mystery",permalink:"/api/interfaces/mechanics/mystery"}},o={},m=[];function l(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.RP)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"claim-interfaces",children:"Claim interfaces"}),"\n",(0,i.jsx)(n.p,{children:"These interfaces related to claim mechanic"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'export enum ClaimStatus {\n  NEW = "NEW",\n  REDEEMED = "REDEEMED",\n  EXPIRED = "EXPIRED",\n}\n\nexport enum ClaimType {\n  TOKEN = "TOKEN",\n  VESTING = "VESTING",\n}\n\nexport interface IClaim extends IIdDateBase {\n  account: string;\n  item: IAsset;\n  claimStatus: ClaimStatus;\n  claimType: ClaimType;\n  parameters: any;\n  nonce: string;\n  signature: string;\n  endTimestamp: string;\n  merchantId: number;\n  merchant?: IMerchant;\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.RP)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{RP:()=>s});var i=t(6540);const a=i.createContext({});function s(e){const n=i.useContext(a);return i.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);